# タスク管理ルール

## 目的
このドキュメントは、日次・週次・月次のタスク管理と振り返りのプロセスを定義し、継続的な改善と生産性向上を実現します。

## 日次タスク管理

### デイリープランニング（朝）
**時間**: 9:00-9:15（15分）
**実施内容**:
1. **前日の振り返り**
   - 完了タスクの確認
   - 未完了タスクの原因分析
   - ブロッカーの特定

2. **今日のタスク選定**
   - 優先度に基づくタスク選択
   - 実現可能な作業量の設定
   - バッファ時間の確保（20%）

3. **タスクの可視化**
   ```markdown
   ## 2024-01-15（月）のタスク
   
   ### Must（必須）
   - [ ] PRレビュー対応 #123 (1h)
   - [ ] ユーザー認証バグ修正 #456 (2h)
   - [ ] ユニットテスト追加 (1.5h)
   
   ### Should（推奨）
   - [ ] リファクタリング: UserService (2h)
   - [ ] ドキュメント更新 (1h)
   
   ### バッファ
   - 緊急対応用: 1.5h
   
   ### 会議・定例
   - 10:00 デイリースクラム
   - 14:00 設計レビュー
   ```

### デイリーレビュー（夕方）
**時間**: 17:45-18:00（15分）
**チェックリスト**:
```markdown
## 日次振り返りテンプレート

### 完了タスク
- ✅ タスク名 (実績時間/見積時間)

### 未完了タスク
- ❌ タスク名 (進捗%/理由)

### 学んだこと
- 

### 改善点
- 

### 明日への申し送り
- 

### 気分・調子
- [ ] 😄 絶好調
- [ ] 🙂 良好
- [ ] 😐 普通
- [ ] 😔 不調
- [ ] 😫 要改善
```

## 週次タスク管理

### ウィークリープランニング（月曜朝）
**時間**: 月曜 9:30-10:30（60分）
**アジェンダ**:

1. **先週の振り返り**（20分）
   - KPI達成状況
   - 主要成果のレビュー
   - 課題と改善点

2. **今週の目標設定**（20分）
   - スプリントゴールの確認
   - 個人目標の設定
   - マイルストーンの確認

3. **タスク計画**（20分）
   - バックログからタスク選定
   - 優先順位付け
   - 日別の大まかな配分

### 週次振り返りテンプレート
```markdown
# Week XX (YYYY-MM-DD 〜 YYYY-MM-DD) 振り返り

## 📊 KPI/メトリクス
- **完了ストーリーポイント**: XX/XX
- **コミット数**: XX
- **PRマージ数**: XX
- **バグ修正数**: XX
- **ドキュメント更新**: XX件

## ✅ 達成したこと
### 機能開発
- 

### バグ修正
- 

### その他
- 

## 📝 学習・発見
### 技術的学習
- 

### プロセス改善
- 

### チームワーク
- 

## 🚧 課題・ブロッカー
| 課題 | 影響 | 対策 | 期限 |
|------|------|------|------|
|      |      |      |      |

## 💡 改善提案
### 開発プロセス
- 

### ツール・環境
- 

### コミュニケーション
- 

## 📅 来週の重点項目
1. 
2. 
3. 

## 🎯 個人目標の進捗
- [ ] 目標1: 進捗XX%
- [ ] 目標2: 進捗XX%
- [ ] 目標3: 進捗XX%
```

### 週次1on1テンプレート
```markdown
# 1on1 Meeting Notes - YYYY-MM-DD

## 📋 アジェンダ
1. 先週の振り返り
2. 今週の優先事項
3. キャリア・成長
4. フィードバック
5. その他

## 🔄 先週の振り返り
### 良かったこと
- 

### 改善が必要なこと
- 

## 🎯 今週の優先事項
1. 
2. 
3. 

## 📈 キャリア・成長
### 現在のスキルギャップ
- 

### 学習計画
- 

### 中長期目標
- 

## 💬 フィードバック
### マネージャーから
- 

### メンバーから
- 

## 📝 アクションアイテム
- [ ] [誰が] [何を] [いつまでに]
- [ ] 
- [ ] 

## 🤝 次回までの宿題
- 
```

## 月次タスク管理

### 月次計画会議（月初）
**時間**: 第1営業日 14:00-16:00（2時間）
**参加者**: チーム全員

#### アジェンダ
1. **先月の総括**（30分）
   - 目標達成度の確認
   - 主要成果のプレゼン
   - 失敗の分析と学習

2. **今月の計画**（60分）
   - 月次目標の設定
   - リソース配分
   - リスク識別

3. **プロセス改善**（30分）
   - 改善提案の検討
   - 新しい取り組みの決定
   - 役割分担の見直し

### 月次レポートテンプレート
```markdown
# 月次レポート - YYYY年MM月

## 📊 エグゼクティブサマリー
### ハイライト
- 
- 
- 

### 主要数値
| 指標 | 目標 | 実績 | 達成率 |
|------|------|------|--------|
| リリース機能数 |  |  |  |
| バグ解決率 |  |  |  |
| コードカバレッジ |  |  |  |
| 顧客満足度 |  |  |  |

## 🚀 完了プロジェクト
### プロジェクト名
- **概要**: 
- **成果**: 
- **学習**: 

## 📈 進行中プロジェクト
### プロジェクト名
- **進捗**: XX%
- **次のマイルストーン**: 
- **リスク**: 

## 👥 チーム状況
### メンバー稼働率
| メンバー | 稼働率 | 主要貢献 |
|----------|--------|----------|
|          |        |          |

### スキル向上
- 新規習得技術: 
- 資格取得: 
- 研修参加: 

## 🔧 技術的改善
### インフラ・環境
- 

### 開発プロセス
- 

### 品質向上
- 

## 💰 予算執行状況
- **月初予算**: 
- **執行額**: 
- **執行率**: 
- **主要支出**: 

## 🎯 来月の重点項目
1. 
2. 
3. 

## 📋 改善アクションプラン
| アクション | 担当 | 期限 | 状態 |
|------------|------|------|------|
|            |      |      |      |
```

## タスクの優先順位付け

### アイゼンハワーマトリクス
```
緊急度 ↑
高 | 【今すぐ】     | 【計画的に】   |
   | ・障害対応      | ・新機能開発    |
   | ・締切間近      | ・リファクタ    |
   | ・ブロッカー    | ・学習        |
---|----------------|----------------|
低 | 【委任/自動化】 | 【削除/延期】   |
   | ・定型作業      | ・nice to have |
   | ・簡単なバグ    | ・過度な最適化  |
    低               高  → 重要度
```

### MoSCoW法
- **Must have**: ビジネスクリティカル、法的要件
- **Should have**: 重要だが回避策あり
- **Could have**: あると良いが必須ではない
- **Won't have**: 今回のスコープ外

### WIPリミット
- 個人: 同時進行3タスクまで
- チーム: 進行中ストーリー5つまで
- レビュー待ち: 最大10PR

## 生産性向上のTips

### ポモドーロテクニック
```markdown
## ポモドーロセッション記録
Date: YYYY-MM-DD

🍅 セッション1 (09:00-09:25)
- タスク: コードレビュー
- 完了: ✅

🍅 セッション2 (09:30-09:55)
- タスク: バグ修正 #123
- 完了: ✅

☕ 長休憩 (09:55-10:10)

🍅 セッション3 (10:10-10:35)
- タスク: ユニットテスト作成
- 完了: ❌ (中断: 緊急対応)
```

### タイムボックス
- コードレビュー: 最大30分/PR
- 会議: アジェンダ時間厳守
- 調査タスク: 2時間上限設定
- バグ修正: 4時間で一旦相談

### フォーカスタイム
- 午前: 9:30-11:30（深い思考が必要なタスク）
- 午後: 14:00-16:00（実装作業）
- Slack通知OFF推奨

## ツール活用

### タスク管理ツール
1. **Jira/Linear**
   - エピック > ストーリー > サブタスク
   - ステータス自動更新
   - バーンダウンチャート活用

2. **GitHub Projects**
   - カンバンボード
   - 自動化ルール設定
   - マイルストーン連携

3. **個人タスク管理**
   - Notion/Obsidian
   - TodoList
   - カレンダー統合

### 自動化
```yaml
# .github/workflows/task-automation.yml
name: Task Automation

on:
  pull_request:
    types: [opened, closed]
  issues:
    types: [opened, closed]

jobs:
  update-project:
    runs-on: ubuntu-latest
    steps:
      - name: Move card
        uses: actions/github-script@v6
        with:
          script: |
            // カード移動ロジック
```

## 振り返りの習慣化

### YWT法（やったこと・わかったこと・次やること）
毎日5分、以下を記録:
- Y: 今日やったこと（事実）
- W: わかったこと（気づき）
- T: 次やること（アクション）

### KPT法（Keep・Problem・Try）
週次で実施:
- Keep: 継続すること
- Problem: 問題点
- Try: 新しく試すこと

### 4行日記
1. 事実（今日起きたこと）
2. 発見（気づいたこと）
3. 教訓（学んだこと）
4. 宣言（明日やること）

## 健康的なワークライフバランス

### 燃え尽き防止
- 定期的な休憩
- 残業時間の可視化
- 有給取得の推奨
- 趣味の時間確保

### ストレス管理
- 1on1での相談
- チームでの共有
- 適切な負荷分散
- 達成感の演出

### 成長の記録
- 四半期ごとのスキル棚卸し
- ポートフォリオ更新
- 社内外での発表
- メンタリング活動